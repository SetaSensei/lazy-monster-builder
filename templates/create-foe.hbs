<form class="flexcol" autocomplete="off">
  <div class="flex0">
    <div class="flexcol">
      <header>
        <h2>Select CR and monster type</h2>
      </header>
      <div class="flexrow">
        <select id="cr-value" name="crValue">
          {{#each options.stats}}
            <option value="{{this.CR}}" data-pab="{{this.PAB}}" data-noa="{{this.NoA}}" data-hp="{{this.HP}}"
              data-dmg="{{this.DpACalc}}" data-ac="{{this.ACDC}}" data-exp="{{this.example}}">CR: {{this.CR}}
              ({{this.example}})
            </option>
          {{/each}}
        </select>
      </div>
      <div class="flexrow">
        <label for="monster-type">Foe Type :</label>
        <select id="monster-type" name="monsterType">
          {{#each options.type}}
            <option value="{{this.name}}">{{this.name}}</option>
          {{/each}}
        </select>
      </div>
    </div>
  </div>
  <div class="flex0">

    <div class="flexcol">
      <header>
        <h2>Advanced options</h2> <span class="lmb-warn">Editing abilities
          after creation may lead to unexpected results</span>
      </header>
      <header class="lmb-hidden">
        <h3>Ability scores</h3>
      </header>
      <div class="flexrow lmb-hidden">
        <div class="flex1">
          <label for="str">Str</label>
          <input class="ability" type="number" id="str" name="str" min="1" max="24" value="10">
        </div>
        <div class="flex1">
          <label for="dex">Dex</label>
          <input class="ability" type="number" id="dex" name="dex" min="1" max="24" value="10">
        </div>
        <div class="flex1">
          <label for="con">Con</label>
          <input class="ability" type="number" id="con" name="con" min="1" max="24" value="10">
        </div>
        <div class="flex1">
          <label for="int">Int</label>
          <input class="ability" type="number" id="int" name="int" min="1" max="24" value="10">
        </div>
        <div class="flex1">
          <label for="wis">Wis</label>
          <input class="ability" type="number" id="wis" name="wis" min="1" max="24" value="10">
        </div>
        <div class="flex1">
          <label for="wis">cha</label>
          <input class="ability" type="number" id="cha" name="cha" min="1" max="24" value="10">
        </div>
      </div>
      <header>
        <h3>Bonus (<label id="saveBonus">+2</label>)</h3>
      </header>
      <div class="flexrow">
        <label>
          <input type="checkbox" id="strBonus">
          Str
        </label>
        <label>
          <input type="checkbox" id="dexBonus">
          Dex
        </label>
        <label>
          <input type="checkbox" id="conBonus">
          Con
        </label>
        <label>
          <input type="checkbox" id="intBonus">
          Int
        </label>
        <label>
          <input type="checkbox" id="wisBonus">
          Wis
        </label>
        <label>
          <input type="checkbox" id="chaBonus">
          Cha
        </label>
      </div>
      <header>
        <h3>Features</h3>
      </header>
      <div class="flexrow">
        <label for="feature-value">Feature :</label>
        <select id="feature-value" name="featureValue">
          <option value="none">none</option>
          {{#each options.features}}
            <option value="{{this.name}}">{{this.name}}</option>
          {{/each}}
        </select>
      </div>
      <div class="form-group">
        <label id="expLabel">Example: {{options.stats.[0].example}}</label>
      </div>
    </div>
  </div>
</form>
<script>
  function updateProf(ability) {
    console.log(ability)
    const profCheck = document.getElementById(ability + 'Bonus')
    const label = document.getElementById(ability + 'Prof')
    console.log(profCheck)
    console.log(label)

    if (profCheck.checked === true) {

      const source = document.getElementById('cr-value')
      const prof = source.options[source.selectedIndex].getAttribute('data-pab');

      label.innerText = prof
    } else {
      label.innerText = '+0'
    }
  }

  document.getElementById('strBonus').addEventListener('change', function () {
    updateProf('str')
  })
  document.getElementById('dexBonus').addEventListener('change', function () {
    updateProf('dex')
  })
  document.getElementById('conBonus').addEventListener('change', function () {
    updateProf('con')
  })
  document.getElementById('intBonus').addEventListener('change', function () {
    updateProf('int')
  })
  document.getElementById('wisBonus').addEventListener('change', function () {
    updateProf('wis')
  })
  document.getElementById('chaBonus').addEventListener('change', function () {
    updateProf('cha')
  })

  document.getElementById('str').addEventListener('change', function () {
    const label = document.getElementById('strLabel');
    label.textContent = this.value;
  })

  document.getElementById('dex').addEventListener('change', function () {
    const label = document.getElementById('dexLabel');
    label.textContent = this.value;
  })

  document.getElementById('con').addEventListener('change', function () {
    const label = document.getElementById('conLabel');
    label.textContent = this.value;
  })

  document.getElementById('int').addEventListener('change', function () {
    const label = document.getElementById('intLabel');
    label.textContent = this.value;
  })

  document.getElementById('wis').addEventListener('change', function () {
    const label = document.getElementById('wisLabel');
    label.textContent = this.value;
  })

  document.getElementById('cha').addEventListener('change', function () {
    const label = document.getElementById('chaLabel');
    label.textContent = this.value;
  })

  document.getElementById('monster-type').addEventListener('change', function () {
    const imgPath = "{{options.path}}/tokens/" + this.value.toLowerCase() + ".png"
    token.src = imgPath
  })

  document.getElementById('cr-value').addEventListener('change', function () {
    const hpLabel = document.getElementById('hpLabel');
    const dmgLabel = document.getElementById('dmgLabel');
    const expLabel = document.getElementById('expLabel');
    const acLabel = document.getElementById('acLabel');
    const savesLabel = document.getElementById('saveBonus');

    const selectedOption = this.options[this.selectedIndex];

    const hpValue = selectedOption.getAttribute('data-hp');
    const noaValue = selectedOption.getAttribute('data-noa');
    const dmgValue = selectedOption.getAttribute('data-dmg');
    const expValue = selectedOption.getAttribute('data-exp');
    const acValue = selectedOption.getAttribute('data-ac');
    const savesValue = selectedOption.getAttribute('data-pab');

    hpLabel.textContent = hpValue;
    dmgLabel.textContent = dmgValue + " x " + noaValue;
    expLabel.textContent = "Example: " + expValue;
    acLabel.textContent = acValue;
    savesLabel.textContent = savesValue;
    updateProf('str')
    updateProf('dex')
    updateProf('con')
    updateProf('int')
    updateProf('wis')
    updateProf('cha')

  });
</script>